name: bundle

on:
  workflow_call:
    inputs:
      version:
        description: 'Version of the bundle'
        required: true
        type: string
      retention-days:
        description: 'Amount of time that the artifact gets stored. Default: `2`'
        required: false
        default: 2
        type: number
    outputs:
      artifact-path:
        description: 'Path to built artifact'
        value: ${{ jobs.create-win-bundle.outputs.artifact-path }}
      artifact-url:
        description: 'URL to built artifact'
        value: ${{ jobs.create-win-bundle.outputs.artifact-url }}
      job-url:
        description: 'URL to build job'
        value: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

jobs:
  create-win-bundle:
    runs-on: ubuntu-24.04
    outputs:
      artifact-path: ${{ steps.output-artifact-path.outputs.artifact-path }}
      artifact-url: ${{ steps.upload-artifact.outputs.artifact-url }}
    steps:
      # Checks-out repository under $GITHUB_WORKSPACE, so job can access repo files
      - uses: actions/checkout@v4

      - name: Set variable for FFmpeg version
        run: |
          echo "FFMPEG_VERSION=$(cat VERSION_FFMPEG)" >> $GITHUB_ENV

      - name: Job for creating a bundle with version ${{ inputs.version }} and including FFmpeg ${{ env.FFMPEG_VERSION }}
        run: echo "Creating a bundle with version ${{ inputs.version }} and including FFmpeg ${{ env.FFMPEG_VERSION }} ..."

      - name: Download and unzip FFmpeg Version ${{ env.FFMPEG_VERSION }}
        run: |
          wget https://github.com/GyanD/codexffmpeg/releases/download/${{ env.FFMPEG_VERSION }}/ffmpeg-${{ env.FFMPEG_VERSION }}-full_build.zip
          unzip ffmpeg-${{ env.FFMPEG_VERSION }}-full_build.zip

      - name: Create bundle dir
        run: |
          mkdir win-bundle
          mv ./ffmpeg-${{ env.FFMPEG_VERSION }}-full_build/bin/ffmpeg.exe ./win-bundle/
          mv ./ffmpeg-${{ env.FFMPEG_VERSION }}-full_build/bin/ffprobe.exe ./win-bundle/
          mv ./LICENSE ./win-bundle/
          mv ./README.md ./win-bundle/
          mv ./*.ps1 ./win-bundle/

      - name: Create zip with compression with version ${{ inputs.version }}
        run: zip -9 -r win-bundle_${{ inputs.version }}.zip ./win-bundle/

      - name: List files
        run: ls -alh

      - name: Upload zip as artifact
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: win-bundle_${{ inputs.version }}
          path: win-bundle_${{ inputs.version }}.zip
          retention-days: ${{ inputs.retention-days }}
          overwrite: true

      - name: Output artifact path
        id: output-artifact-path
        run: echo "artifact-path=win-bundle_${{ inputs.version }}" >> $GITHUB_OUTPUT
